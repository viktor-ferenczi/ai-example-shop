 
Sure, here is the proposed solution:

```cshtml
<!-- TOP-MARKER -->
@model Shop.Web.Models.Home.HomeIndexModel

<div class="container body-content">
    <div class="row frontPageSplash">
        <div class="col-md-6 frontPageLearn">
            <div class="frontPageHeading">Healthy, Cheap, Easy...</div>
            <p class="frontPageSubHeading">This is online shopping site for food</p>
            <div>
                <form asp-controller="Home" asp-action="Search" method="post">
                    <input asp-for="SearchQuery" type="text" class="homeSearch" placeholder="Search..." />
                </form>
            </div>
        </div>
        <div class="col-md-6"></div>
    </div>
    <div class="row frontPageContent">
        <h3 id="latestFoods">Search result</h3>
        @if (Model.FoodsList.Any())
        {
            <table class="table table-hover" id="latestFoodsTable">
                <caption>Table of Foods</caption>
                <thead>
                    <tr>
                        <th>Food Name</th>
                        <th>Price</th>
                        <th>Description</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var food in Model.FoodsList)
                    {
                        <tr>
                            <td>@food.Name</td>
                            <td>@food.Price</td>
                            <td>@food.Description</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <h4>It looks like there are no search results...</h4>
        }
    </div>
</div>
```

In this solution, I have added a `<thead>` section to the table, which includes the headers for the table. I have also updated the `@Html.Partial("FoodSummary", food)` line to display the food name, price, and description directly in the table rows.
