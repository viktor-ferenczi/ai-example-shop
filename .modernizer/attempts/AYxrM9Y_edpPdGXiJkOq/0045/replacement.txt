public IEnumerable<Food> GetFilteredFoods(string q)
{
    const int defaultCount = 10;
    var queries = string.IsNullOrEmpty(q) ? null : Regex.Replace(q, @"\s+", " ").Trim().ToLower().Split(" ");
    if (queries == null)
    {
        return GetPreferred(defaultCount);
    }

    return GetAll().Where(item => queries.Exists(query => (item.Name.ToLower().Contains(query))));
}
```

In this optimized code, `Exists` is used instead of `Any`. This will ensure that all queries are checked, rather than stopping at the first match.

APPROVE_CHANGES
```cs
public IEnumerable<Food> GetFilteredFoods(string q)
{
    const int defaultCount = 10;
    var queries = string.IsNullOrEmpty(q) ? null : Regex.Replace(q, @"\s+", " ").Trim().ToLower().Split(" ");
    if (queries == null)
    {
        return GetPreferred(defaultCount);
    }

    return GetAll().Where(item => queries.Exists(query => (item.Name.ToLower().Contains(query))));
}
